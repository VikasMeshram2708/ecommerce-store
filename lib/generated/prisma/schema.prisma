generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  BASIC
}

model User {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  email    String  @unique
  password String?
  picture  String?

  role UserRole @default(BASIC)

  cartItem CartItem[]
  order    Order[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model CartItem {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  skuId       String @unique
  quantity    Int    @default(1)
  title       String
  price       Float
  description String
  category    String
  image       String
  rating      Rating @relation(fields: [ratingId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  ratingId String  @db.ObjectId
  User     User?   @relation(fields: [userId], references: [id])
  userId   String? @db.ObjectId
}

model Rating {
  id       String     @id @default(auto()) @map("_id") @db.ObjectId
  rate     Float
  count    Int
  cartItem CartItem[]
}

enum OrderStatus {
  PENDING
  SHIPPED
  DELIVERED
  CANCELLED
}

model Order {
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  orderId String @unique

  orderStatus OrderStatus @default(PENDING)

  totalAmount     Float
  shippingAddress String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  User   User?   @relation(fields: [userId], references: [id])
  userId String? @db.ObjectId
}
